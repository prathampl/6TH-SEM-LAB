n <- as.integer(readline(prompt = "Enter no of students")) # Read No of students
# Declare the vector of character of length n
USN <- vector(mode="character", length= n) 
Name <- vector(mode="character", length= n)
Marks <- vector(mode="numeric", length= n)

#Read the elements of the vector
print("Enter USN")
for (i in 1:n)
  USN[i] <- as.character(readline())
print("Enter Name")
for (i in 1:n)
  Name [i] <- readline()
print("Enter Marks" )
for (i in 1:n)
  Marks[i] <- as.integer(readline())

#Construct the data frame from the vectors
student <- data.frame(USN,Name,Marks)
print("The Student detials are as follows")
print(student) # Display data frame

print("Enter Age")  # Read the vector of Age
Age <- vector(mode="integer", length=n)
for (i in 1:n)
  Age [i] <- readline()
student <- cbind(student,Age) # Append the vector to the data frame

print(student)

stud=subset(student,Age>19 & Marks>25)
print(stud)

########################################################################################################

#Let's create a new dataframe
n <- as.integer(readline(prompt = "Enter the no of employees : "))
EmpID <- vector(mode = "character", length = n)
EmpName <- vector(mode = "character", length = n)
DOJ <- vector(mode = "character", length = n)
Dept <- vector(mode = "character", length = n)
Desig <- vector(mode = "character", length = n)

print("\n\nEnter the details : \n\n")
for(i in 1:n) {
  EmpID[i] <- as.character(readline())
  EmpName[i] <- as.character(readline())
  DOJ[i] <- as.character(readline())
  Dept[i] <- as.character(readline())
  Desig[i] <- as.character(readline())
}

employee <- data.frame(EmpID, EmpName, DOJ, Dept, Desig)

#Let's store this as a csv file
write.csv(employee, file = "D:/Projects/bdt_lab/lab_exam/employee.csv")

#Read data from the csv file
empcsv <- read.csv(file = "employee.csv")

new_row <- data.frame("3", "Big Mom", "24-07-2001", "Marketing", "Head")
#Append new row into the csv file
write.table(new_row, file ="employee.csv", sep=",", col.names = FALSE, append = TRUE)
print(empcsv)

###############################################################################################################


#a. List the data set available in your system using suitable command
#b. Select “mtcars” data set, find and display the number of rows and columns in that data set
#c. Find are there more automatic (0) or manual (1) transmission-type cars in the dataset? Hint: 9th column indicate the transmission type
#d. Get a scatter plot of ‘hp’ vs ‘weight’.
#e. Change ‘am’, ‘cyl’ and ‘vs’ to integer and store the new dataset as ‘newmtc’.
#f. Extract the cases where cylinder is less than 5
data(mtcars)
mtcars
m <- nrow(mtcars)
n <- ncol(mtcars)

auto <- 0
manual <- 0

for(i in 1:m) {
  if(mtcars[i, 9] == 0)
    manual <- manual + 1
  else
    auto <- auto + 1
}

if(auto > manual) print("There are more automatics") else print("There are more manuals")

hp <- mtcars[, 4]
wt <- mtcars[, 6]
scatter.smooth(hp, wt)

am <- as.integer(mtcars[, 9])
cyl <- as.integer(mtcars[, 2])
vs <- as.integer(mtcars[, 8])

newmtc <- data.frame(am, cyl, vs)
newmtc

subset(newmtc, cyl < 5)
########################################################################################################################

#Consider “Airquality” dataset
#Display the dimension of the dataset
#Display the class of each fields in the data set
#Test the missing values
#Recode the missing values, as mean of the column values
#Exclude the missing values

x <- airquality
dim(airquality)
sapply(x, class)
sum(is.na(x))
avg <- colMeans(x, na.rm = TRUE)

for(i in 1:nrow(airquality)) {
  for(j in 1:ncol(airquality)) {
    if(is.na(x[i, j]))
      x[i, j] <- mean(airquality[, j], na.rm = TRUE)
  }
}
x
x <- airquality
test <- na.omit(airquality)